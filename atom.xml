<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>穷皮涛宝典</title>
  
  <subtitle>不知名互联网公司的不知名工程师</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangtaoy.cn/"/>
  <updated>2019-06-18T07:59:15.338Z</updated>
  <id>https://zhangtaoy.cn/</id>
  
  <author>
    <name>zhangtao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python3.7升级实践</title>
    <link href="https://zhangtaoy.cn/2019/Python3.7%E5%8D%87%E7%BA%A7%E5%AE%9E%E8%B7%B5/"/>
    <id>https://zhangtaoy.cn/2019/Python3.7升级实践/</id>
    <published>2019-06-18T06:25:23.420Z</published>
    <updated>2019-06-18T07:59:15.338Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Jun 18 2019 15:59:20 GMT+0800 (CST) --><p>公司的后台运营系统计划目前是Python2.7 + tornado，计划升级为Python3.7，过程记录于此。</p><a id="more"></a><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><p>Python2.7环境可以直接用CentOS自带的，但是Python3.7就需要自己装了，而且目前不可以直接yum装，那就只能从源码编译之。(以下操作均需root用户或sudo)</p><h3 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</span><br></pre></td></tr></table></figure><h3 id="下载Python3-7-2安装包"><a href="#下载Python3-7-2安装包" class="headerlink" title="下载Python3.7.2安装包"></a>下载Python3.7.2安装包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz</span><br></pre></td></tr></table></figure><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xvJf  Python-3.7.2.tgz</span><br></pre></td></tr></table></figure><h3 id="编译三部曲"><a href="#编译三部曲" class="headerlink" title="编译三部曲"></a>编译三部曲</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> Python-3.7.2</span><br><span class="line">$ ./configure --prefix=/usr/<span class="built_in">local</span>/bin/python3.7</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h3 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h3><p>因为python3.7安装到了/usr/local/bin/目录，那么在命令行直接输入python3.7命令是不能执行的，需要软连接至/usr/bin/目录<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /usr/<span class="built_in">local</span>/bin/python3.7/bin/python3.7 /usr/bin/python3.7</span><br><span class="line">$ ln -s /usr/<span class="built_in">local</span>/bin/python3.7/bin/pip3.7 /usr/bin/pip3.7</span><br></pre></td></tr></table></figure><p></p><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>命令行输入python3.7，pip3.7测试，ok</p><h1 id="工程的Python2-gt-Python3"><a href="#工程的Python2-gt-Python3" class="headerlink" title="工程的Python2 -&gt; Python3"></a>工程的Python2 -&gt; Python3</h1><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>参考：<a href="https://www.zlovezl.cn/articles/instagram-pycon-2017/" target="_blank" rel="noopener">Ins的Python2-&gt;3分享</a></p><h3 id="Python2和Python3的主要区别"><a href="#Python2和Python3的主要区别" class="headerlink" title="Python2和Python3的主要区别"></a>Python2和Python3的主要区别</h3><h4 id="底层"><a href="#底层" class="headerlink" title="底层"></a>底层</h4><ul><li><p>Python2的文档编码和运行环境编码默认是ascii，必须要手动声明utf-8，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明代码文本编码为utf-8</span></span><br><span class="line"><span class="comment"># coding=utf-8 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制运行环境编码为utf-8</span></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure><p>Python3.6开始已经从运行环境到文档编码全是utf-8了，thank god</p></li><li>str bytes unicode encode decode<br>Python2的str bytes unicode encode decode傻傻分不清楚，Python3终于解决了这个死丢皮的问题（如果你是在Windows环境学习Python2的话。。。只能说坚持下来的都是和我一样的好汉）。Python3里，去掉了unicode类型，str==unicode， str.encode() -&gt; bytes bytes.decode() -&gt; str</li><li>除法<br>Python2里的除法：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python2</span></span><br><span class="line"><span class="number">5</span> / <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span></span><br><span class="line"><span class="number">5.5</span> / <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2.75</span></span><br></pre></td></tr></table></figure></li></ul><p>即整数除以整数只能得到整数，要想得到小数结果必须被除数和除数之一为显式的小数，如5.0或float(5)<br>Python3的除法（个人觉得更符合直觉）：<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python3</span></span><br><span class="line"><span class="number">5</span> / <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2.5</span></span><br><span class="line"><span class="number">5.5</span> / <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2.75</span></span><br></pre></td></tr></table></figure><p></p><ul><li>生成器，参考<a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/c04/p03_create_new_iteration_with_generators.html" target="_blank" rel="noopener">使用生成器创建新的迭代模式</a></li></ul><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul><li>最明显的：print关键字修改为print()函数，具体原因参考<a href="https://www.python.org/dev/peps/pep-3105/" target="_blank" rel="noopener">Python之父的pep-3105</a></li><li>exec 关键字 -&gt; exec()函数</li><li>相对导入更加明确，参考<a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/c10/p03_import_submodules_by_relative_names.html" target="_blank" rel="noopener">使用相对路径名导入包中子模块</a></li><li>async 和 await, asyncio， 参考<a href="https://www.keakon.net/2017/06/28/%E7%94%A8Python3%E7%9A%84async/await%E5%81%9A%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B" target="_blank" rel="noopener">用 Python 3 的 async / await 做异步编程</a></li></ul><h4 id="包版本和函数的变化（遇到了就补充）"><a href="#包版本和函数的变化（遇到了就补充）" class="headerlink" title="包版本和函数的变化（遇到了就补充）"></a>包版本和函数的变化（遇到了就补充）</h4><ul><li>urllib2 -&gt; urllib，虽然我基本不用这个包。。。我觉得这个包的设计是Python的耻辱，无脑requests。</li></ul><h4 id="Tonado"><a href="#Tonado" class="headerlink" title="Tonado"></a>Tonado</h4><ul><li>tornado5.1及Python3.6以后，使用asyncio代替了自己的ioloop，之前的接口相当于封装了asyncio的函数，整体使用基本没有区别。最重要的是：兼容async，await，return的写法，不用再用恶心的 raise gen.Return() 了哈哈哈</li></ul><h3 id="开始迁移"><a href="#开始迁移" class="headerlink" title="开始迁移"></a>开始迁移</h3><h4 id="使用2to3"><a href="#使用2to3" class="headerlink" title="使用2to3"></a>使用<a href="https://docs.python.org/2/library/2to3.html" target="_blank" rel="noopener">2to3</a></h4><p>2to3本身是支持整个目录递归转换的，但是会遍历一些不必要的目录(.git, .idea, venv这些)，所以自己写了一个脚本，避开这些目录<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pprint <span class="keyword">import</span> pprint</span><br><span class="line"></span><br><span class="line">py_files = []</span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="string">'your project root dir'</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'venv'</span> <span class="keyword">in</span> root <span class="keyword">or</span> <span class="string">'.git'</span> <span class="keyword">in</span> root:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        py_files.extend([os.path.join(root, file) <span class="keyword">for</span> file <span class="keyword">in</span> files <span class="keyword">if</span> file.endswith(<span class="string">'.py'</span>)])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(len(py_files))</span><br><span class="line">pprint(py_files)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'op_service_2to3_log'</span>, mode=<span class="string">'a+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> py_files:</span><br><span class="line">        print(<span class="string">f'file: <span class="subst">&#123;file&#125;</span>'</span>)</span><br><span class="line">        print(<span class="string">f'file: <span class="subst">&#123;file&#125;</span>'</span>, file=f)</span><br><span class="line">        out_bytes = subprocess.check_output(<span class="string">f'2to3 <span class="subst">&#123;file&#125;</span> -w -n'</span>, stderr=subprocess.STDOUT, shell=<span class="literal">True</span>)</span><br><span class="line">        print(<span class="string">'    '</span> + out_bytes.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">        print(<span class="string">'    '</span> + out_bytes.decode(<span class="string">'utf-8'</span>), file=f)</span><br></pre></td></tr></table></figure><p></p><p>跑完之后基本就是Python3的代码了，不过有一些转换2to3还是不支持，需要手动处理下 如 file() 转为 open()</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Jun 18 2019 15:59:20 GMT+0800 (CST) --&gt;&lt;p&gt;公司的后台运营系统计划目前是Python2.7 + tornado，计划升级为Python3.7，过程记录于此。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangtaoy.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CentOS" scheme="https://zhangtaoy.cn/tags/CentOS/"/>
    
      <category term="Python" scheme="https://zhangtaoy.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序折腾记</title>
    <link href="https://zhangtaoy.cn/2019/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%8A%98%E8%85%BE%E8%AE%B0/"/>
    <id>https://zhangtaoy.cn/2019/微信小程序折腾记/</id>
    <published>2019-06-06T03:56:21.069Z</published>
    <updated>2019-06-10T07:28:34.717Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Jun 18 2019 15:46:21 GMT+0800 (CST) --><p>一个微信小程序项目，<a href="https://caddyserver.com/" target="_blank" rel="noopener">caddy</a> + <a href="https://www.tornadoweb.org/en/stable/" target="_blank" rel="noopener">tornado</a>, 放在ucloud的CentOS7.6上.</p><a id="more"></a><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Jun 18 2019 15:46:21 GMT+0800 (CST) --&gt;&lt;p&gt;一个微信小程序项目，&lt;a href=&quot;https://caddyserver.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;caddy&lt;/a&gt; + &lt;a href=&quot;https://www.tornadoweb.org/en/stable/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tornado&lt;/a&gt;, 放在ucloud的CentOS7.6上.&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangtaoy.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CentOS" scheme="https://zhangtaoy.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangtaoy.cn/2019/hello-world/"/>
    <id>https://zhangtaoy.cn/2019/hello-world/</id>
    <published>2019-04-25T10:40:28.308Z</published>
    <updated>2019-05-21T12:57:14.493Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Jun 18 2019 15:46:21 GMT+0800 (CST) --><p>博客诞生记！本博客使用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> + <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a> + <a href="https://github.com" target="_blank" rel="noopener">Github Pages</a>花费10分钟搭建而成</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Jun 18 2019 15:46:21 GMT+0800 (CST) --&gt;&lt;p&gt;博客诞生记！本博客使用 &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; + &lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Next&lt;/a&gt; + &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github Pages&lt;/a&gt;花费10分钟搭建而成&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangtaoy.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="https://zhangtaoy.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
