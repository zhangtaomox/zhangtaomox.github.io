{"meta":{"title":"穷皮涛宝典","subtitle":"不知名互联网公司的不知名工程师","description":null,"author":"zhangtao","url":"https://zhangtaoy.cn","root":"/"},"pages":[{"title":"","date":"2019-06-05T10:31:40.311Z","updated":"2019-06-05T09:48:05.459Z","comments":true,"path":"google2c247ba5a968e555.html","permalink":"https://zhangtaoy.cn/google2c247ba5a968e555.html","excerpt":"","text":"google-site-verification: google2c247ba5a968e555.html"}],"posts":[{"title":"Python3.7升级实践","slug":"Python3.7升级实践","date":"2019-06-18T06:25:23.420Z","updated":"2019-06-18T07:45:44.248Z","comments":true,"path":"2019/Python3.7升级实践/","link":"","permalink":"https://zhangtaoy.cn/2019/Python3.7升级实践/","excerpt":"公司的后台运营系统计划目前是Python2.7 + tornado，计划升级为Python3.7，过程记录于此。","text":"公司的后台运营系统计划目前是Python2.7 + tornado，计划升级为Python3.7，过程记录于此。环境安装Python2.7环境可以直接用CentOS自带的，但是Python3.7就需要自己装了，而且目前不可以直接yum装，那就只能从源码编译之。(以下操作均需root用户或sudo)安装编译环境1$ yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel下载Python3.7.2安装包1$ wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz解压1$ tar -xvJf Python-3.7.2.tgz编译三部曲1234$ cd Python-3.7.2$ ./configure --prefix=/usr/local/bin/python3.7$ make$ make install创建软连接因为python3.7安装到了/usr/local/bin/目录，那么在命令行直接输入python3.7命令是不能执行的，需要软连接至/usr/bin/目录12$ ln -s /usr/local/bin/python3.7/bin/python3.7 /usr/bin/python3.7$ ln -s /usr/local/bin/python3.7/bin/pip3.7 /usr/bin/pip3.7完成命令行输入python3.7，pip3.7测试，ok工程的Python2 -&gt; Python3准备工作参考：Ins的Python2-&gt;3分享Python2和Python3的主要区别底层Python2的文档编码和运行环境编码默认是ascii，必须要手动声明utf-8，如：123456# 声明代码文本编码为utf-8# coding=utf-8 # 强制运行环境编码为utf-8reload(sys)sys.setdefaultencoding('utf8')Python3.6开始已经从运行环境到文档编码全是utf-8了，thank godstr bytes unicode encode decodePython2的str bytes unicode encode decode傻傻分不清楚，Python3终于解决了这个死丢皮的问题（如果你是在Windows环境学习Python2的话。。。只能说坚持下来的都是和我一样的好汉）。Python3里，去掉了unicode类型，str==unicode， str.encode() -&gt; bytes bytes.decode() -&gt; str除法Python2里的除法：12345# Python25 / 2&gt;&gt;&gt; 25.5 / 2&gt;&gt;&gt; 2.75即整数除以整数只能得到整数，要想得到小数结果必须被除数和除数之一为显式的小数，如5.0或float(5)Python3的除法（个人觉得更符合直觉）：12345# Python35 / 2&gt;&gt;&gt; 2.55.5 / 2&gt;&gt;&gt; 2.75生成器，参考使用生成器创建新的迭代模式语法最明显的：print关键字修改为print()函数，具体原因参考Python之父的pep-3105exec 关键字 -&gt; exec()函数相对导入更加明确，参考使用相对路径名导入包中子模块async 和 await, asyncio， 参考用 Python 3 的 async / await 做异步编程包版本和函数的变化（遇到了就补充）urllib2 -&gt; urllib，虽然我基本不用这个包。。。我觉得这个包的设计是Python的耻辱，无脑requests。Tonadotornado5.1及Python3.6以后，使用asyncio代替了自己的ioloop，之前的接口相当于封装了asyncio的函数，整体使用基本没有区别。最重要的是：兼容async，await，return的写法，不用再用恶心的 raise gen.Return() 了哈哈哈开始迁移使用2to32to3本身是支持整个目录递归转换的，但是会遍历一些不必要的目录(.git, .idea, venv这些)，所以自己写了一个脚本，避开这些目录1234567891011121314151617181920212223import osfrom pprint import pprintpy_files = []for root, dirs, files in os.walk('your project root dir'): if 'venv' in root or '.git' in root: pass else: py_files.extend([os.path.join(root, file) for file in files if file.endswith('.py')])print(len(py_files))pprint(py_files)import subprocesswith open('op_service_2to3_log', mode='a+') as f: for file in py_files: print(f'file: &#123;file&#125;') print(f'file: &#123;file&#125;', file=f) out_bytes = subprocess.check_output(f'2to3 &#123;file&#125; -w -n', stderr=subprocess.STDOUT, shell=True) print(' ' + out_bytes.decode('utf-8')) print(' ' + out_bytes.decode('utf-8'), file=f)跑完之后基本就是Python3的代码了，不过有一些转换2to3还是不支持，需要手动处理下 如 file() 转为 open()","categories":[{"name":"技术","slug":"技术","permalink":"https://zhangtaoy.cn/categories/技术/"}],"tags":[{"name":"CentOS Python","slug":"CentOS-Python","permalink":"https://zhangtaoy.cn/tags/CentOS-Python/"}]},{"title":"微信小程序折腾记","slug":"微信小程序折腾记","date":"2019-06-06T03:56:21.069Z","updated":"2019-06-10T07:28:34.717Z","comments":true,"path":"2019/微信小程序折腾记/","link":"","permalink":"https://zhangtaoy.cn/2019/微信小程序折腾记/","excerpt":"一个微信小程序项目，caddy + tornado, 放在ucloud的CentOS7.6上.","text":"一个微信小程序项目，caddy + tornado, 放在ucloud的CentOS7.6上.","categories":[{"name":"技术","slug":"技术","permalink":"https://zhangtaoy.cn/categories/技术/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://zhangtaoy.cn/tags/CentOS/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-04-25T10:40:28.308Z","updated":"2019-05-21T12:57:14.493Z","comments":true,"path":"2019/hello-world/","link":"","permalink":"https://zhangtaoy.cn/2019/hello-world/","excerpt":"博客诞生记！本博客使用 Hexo + Next + Github Pages花费10分钟搭建而成","text":"博客诞生记！本博客使用 Hexo + Next + Github Pages花费10分钟搭建而成Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment图片","categories":[{"name":"技术","slug":"技术","permalink":"https://zhangtaoy.cn/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://zhangtaoy.cn/tags/hexo/"}]}]}